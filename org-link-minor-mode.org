#+SETUPFILE: ~/org/setup2.org
#+TITLE:org-link-minor-mode
#+AUTHOR:Sean O'Halpin
#+DATE:2012-08-25
#+PROPERTY: header-args :eval never
#+LINK: elisp http://www.gnu.org/software/emacs/manual/html_node/elisp/%s.html

* Header
:PROPERTIES:
:ID:       14f6023b-6e29-4266-82f2-d227902d4cf7
:END:

The header has the following structure:

#+name: header
#+begin_src emacs-lisp
;;; <<title-line>>
;;
;; <<copyright>>
;;
;; <<package-info>>
;;
;; <<commentary>>
;;
;; <<gnu-std-header>>
#+end_src

** Title line

The title line is the first line in the file and shows the name of the
file and a short description. It also specifies lexical-binding.

#+name: title-line
#+begin_src text
org-link-minor-mode.el --- Enable org-mode links in non-org modes -*- lexical-binding: t; -*-
#+end_src

** Copyright

#+name: copyright
#+begin_src text
Copyright (C) 2012-2020
Author: Sean O'Halpin <sean dot ohalpin at gmail dot com>
Changes for org v9: Stefan-W. Hahn <stefan dot hahn at s-hahn dot de>
#+end_src

** Package info

Specify that this package requires at least Org 8 and the repo url:

#+name: package-info
#+begin_src text
Package-Requires: ((org "8"))
Url: https://github.com/seanohalpin/org-link-minor-mode
#+end_src

** Commentary

A brief explanation of the package:

#+name: commentary
#+begin_src text
Enables org-mode links of the form:

  http://www.bbc.co.uk
  man:emacs
  info:emacs
  <http://www.bbc.co.uk>
  [[http://www.bbc.co.uk][BBC]]
  [[org-link-minor-mode]]
  [2012-08-18]
  <2012-08-18>

Note that `org-toggle-link-display' will also work when this mode
is enabled.
#+end_src

** GNU GPL 3 comment

All files submitted to ELPA should contain the standard GNU GPL 3
comment:

#+name: gnu-std-header
#+begin_src text
This file is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

This file is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#+end_src

* Code

** Require org-mode
:PROPERTIES:
:ID:       0e3b4960-cc9f-4ebe-9acf-c6632b3c68f2
:END:

As we rely on many =org-mode= functions, to avoid warnings, we load
=org-mode=:

#+name: requires
#+begin_src emacs-lisp
(require 'org)
#+end_src

** Declarations for byte-code compiler

#+name: declarations-for-byte-code
#+begin_src emacs-lisp
;; Following declarations are necessary to make the byte compiler happy.

;; For org v8 compatibility (if used with org v9)
(declare-function org-activate-plain-links "org" (limit))
(declare-function org-activate-angle-links "org" (limit))
(declare-function org-activate-bracket-links "org" (limit))
(declare-function org-decompose-region "org-compat" (beg end))

;; For org v9 compatibility (if used with org v8)
(declare-function org-activate-links "org" (limit))
(declare-function org-activate-dates "org" (limit))
#+end_src

** Using the =define-minor-mode= macro
:PROPERTIES:
:ID:       2e643e2a-acb4-43dd-92b3-d8048f66f854
:END:

The simplest way to define a new minor mode is to use the
[[elisp:Defining-Minor-Modes][=define-minor-mode=]] macro:

#+name: define-minor-mode
#+begin_src emacs-lisp
;;;###autoload
(define-minor-mode org-link-minor-mode
  "Toggle display of org-mode style bracket links in non-org-mode buffers."
  :lighter " org-link"
  :keymap org-link-minor-mode-map
  <<body>>)
#+end_src

The [[http://www.gnu.org/software/emacs/manual/html_node/elisp/Autoload.html][=autoload= magic comment]] is used by emacs at build time to add the
=org-link-minor-mode= function to =loaddefs.el=.

The =:lighter= keyword parameter defines what appears in the mode line.

** The body
:PROPERTIES:
:ID:       4e5b0abe-bc41-43f6-9271-b6365a7b5bce
:END:

#+name: body
#+begin_src emacs-lisp
(let ((lk org-highlight-links)
      org-link-minor-mode-keywords)
  <<set-up-font-lock-keywords>>
  <<enter-exit-mode>>)
#+end_src
# NB: Indent is hack to fix indentation in tangled output file

We start the body by setting up the font lock keywords in the variable
=org-link-minor-mode-keywords=, using org-mode's own =org-activate-xxx=
functions to do the heavy lifting.

Note: we do this /before/ entering the mode so the definition of
=org-link-minor-mode-keywords= is available for when we want to leave
the mode.

#+begin_comment
The default value for =org-highlight-links= is:

: (bracket angle plain radio tag date footnote)

Help for this variable in the Customize buffer says:

#+begin_quote
If you set this variable during an Emacs session, use ‘org-mode-restart’
in the Org buffer so that the change takes effect.
#+end_quote
#+end_comment

#+name: set-up-font-lock-keywords
#+begin_src emacs-lisp
(if (fboundp 'org-activate-links)
    ;; from Org v9.2
    (setq org-link-minor-mode-keywords
          (list
           '(org-activate-links)
           (when (memq 'tag lk) '(org-activate-tags (1 'org-tag prepend)))
           (when (memq 'radio lk) '(org-activate-target-links (1 'org-link t)))
           (when (memq 'date lk) '(org-activate-dates (0 'org-date t)))
           (when (memq 'footnote lk) '(org-activate-footnote-links))))
  (setq org-link-minor-mode-keywords
        (list
         (if (memq 'tag lk) '(org-activate-tags (1 'org-tag prepend)))
         (if (memq 'angle lk) '(org-activate-angle-links (0 'org-link t)))
         (if (memq 'plain lk) '(org-activate-plain-links (0 'org-link t)))
         (if (memq 'bracket lk) '(org-activate-bracket-links (0 'org-link t)))
         (if (memq 'radio lk) '(org-activate-target-links (0 'org-link t)))
         (if (memq 'date lk) '(org-activate-dates (0 'org-date t)))
         (if (memq 'footnote lk) '(org-activate-footnote-links)))))
#+end_src

We then branch depending on whether we're entering or exiting the
mode:

#+name: enter-exit-mode
#+begin_src emacs-lisp
(if org-link-minor-mode
    <<enter-minor-mode>>
  <<exit-minor-mode>>)
#+end_src

** Entering the minor mode
:PROPERTIES:
:ID:       a1b76a00-4444-4b5c-bbfa-54c88dac769f
:END:

If we're already in org-mode, display a message and switch
=org-link-minor-mode= off. We need to do it this way as by this point
we've already entered the minor mode (=org-link-minor-mode= is =t=):

#+name: enter-minor-mode
#+begin_src emacs-lisp
(if (derived-mode-p 'org-mode)
    (progn
      (message "org-mode doesn't need org-link-minor-mode")
      (org-link-minor-mode -1))
  <<enter-minor-mode-body>>)
#+end_src

** Minor mode body

When we enter the minor mode, we
1. add the font lock keywords
2. define the keymap that will be active within links
3. set the unfontify function
4. set up =org-descriptive-links=
5. turn on link display

#+name: enter-minor-mode-body
#+begin_src emacs-lisp :exports both :results pp :lexical yes
<<font-lock-spec>>
<<define-keymap>>
<<unfontify-region-function>>
<<org-descriptive-links>>
<<turn-on-link-display>>
#+end_src

** Turning on org-link highlighting
:PROPERTIES:
:noweb-ref: enter-minor-mode-body
:ID:       8d3990a4-ee3b-4276-9a6b-53665c095133
:END:

Add the font-lock specification:

#+name: font-lock-spec
#+begin_src emacs-lisp
(font-lock-add-keywords nil org-link-minor-mode-keywords t)
#+end_src

Org mode associates the =org-mouse-map= keymap with links. This becomes
active when the mouse or point is over a link.

We can use this to enable =return= to follow link (and =tab= to next link,
=backtab= to previous, etc.):

#+name: define-keymap
#+begin_src emacs-lisp
(kill-local-variable 'org-mouse-map)
(setq-local org-mouse-map
            (let ((map (make-sparse-keymap)))
              (define-key map [return] 'org-open-at-point)
              (define-key map [tab] 'org-next-link)
              (define-key map [backtab] 'org-previous-link)
              (define-key map [mouse-2] 'org-open-at-point)
              (define-key map [follow-link] 'mouse-face)
              map))
#+end_src

Reusing =org-mouse-map= like this is a hack. This keymap is set as a
text property of links in =org-activate-bracket-links=, etc. so it's
simpler to co-opt it than to replace those functions.

Enable =org-toggle-link-display= for this buffer only by making
=org-descriptive-links= buffer local:

#+name: org-descriptive-links-orig
#+begin_src emacs-lisp
(setq-local org-descriptive-links org-descriptive-links)
(if org-descriptive-links (add-to-invisibility-spec '(org-link)))
#+end_src

#+name: org-descriptive-links
#+begin_src emacs-lisp
(setq-local org-descriptive-links org-descriptive-links)
;; Set to non-descriptive and then switch to descriptive links
(setq org-descriptive-links nil)
#+end_src

This is the magic that makes the link body appear if you backspace
into it (or use replace to make it no longer a link):

#+name: unfontify-region-function
#+begin_src emacs-lisp
(setq-local font-lock-unfontify-region-function
            'org-link-minor-mode--unfontify-region)
#+end_src

The [[elisp:Search_002dbased-Fontification][documentation]] for [[elisp:Other-Font-Lock-Variables][=font-lock-unfontify-region-function=]] is a bit
sparse but reading =org-unfontify-region= at least shows you what it
should do.

Finally, we refontify the buffer using org's own method:

#+name: turn-on-link-display-orig
#+begin_src emacs-lisp
(org-restart-font-lock)
#+end_src

#+name: turn-on-link-display
#+begin_src emacs-lisp
(org-toggle-link-display)
#+end_src

** Exiting the minor mode
:PROPERTIES:
:ID:       95c5162b-ec40-4bb7-849c-f10d12185b29
:END:

Again, we don't run this code if we're already in org-mode:

#+name: exit-minor-mode
#+begin_src emacs-lisp
(unless (derived-mode-p 'org-mode)
  <<exit-minor-mode-body>>)
#+end_src

Remove all org-link font-lock properties:

#+name: remove-keywords
#+begin_src emacs-lisp
(font-lock-remove-keywords nil org-link-minor-mode-keywords)
#+end_src

Restore existing font lock highlighting

#+name: kill-local-variables
#+begin_src emacs-lisp
(org-restart-font-lock)
(remove-from-invisibility-spec '(org-link))
(kill-local-variable 'org-descriptive-links)
(kill-local-variable 'org-mouse-map)
(kill-local-variable 'font-lock-unfontify-region-function)
#+end_src

#+name: exit-minor-mode-body
#+begin_src emacs-lisp :noweb no-export
<<remove-keywords>>
<<kill-local-variables>>
#+end_src

*** Remove text properties

=org-unfontify-region= does not remove the =help-echo=, =htmlize-link= and
=rear-nonsticky= properties, so I've copied that function and added
those in.

Note: This looks like a bug in =org-unfontify-region=.

We can ignore the =fontified= property as that belongs to
=font-lock-mode=.

#+name: org-link-minor-mode--unfontify-region
#+begin_src emacs-lisp
(defun org-link-minor-mode--unfontify-region (beg end)
  "Remove fontification and activation overlays from links."
  (font-lock-default-unfontify-region beg end)
  (let* ((buffer-undo-list t)
         (inhibit-read-only t) (inhibit-point-motion-hooks t)
         (inhibit-modification-hooks t)
         deactivate-mark buffer-file-name buffer-file-truename)
    (if (fboundp 'org-decompose-region)
        (org-decompose-region beg end)
      (decompose-region beg end))
    (remove-text-properties beg end
                            '(mouse-face t keymap t org-linked-text t
                                         invisible t intangible t
                                         help-echo t rear-nonsticky t
                                         htmlize-link t
                                         org-no-flyspell t org-emphasis t))
    (org-remove-font-lock-display-properties beg end)))
#+end_src

The keymap is defined in case you want to define your own key bindings
for this mode. It is not used by =org-link-minor-mode= itself.

#+name: keymap
#+begin_src emacs-lisp
(defvar org-link-minor-mode-map (make-sparse-keymap)
  "Local keymap.")
(make-variable-buffer-local 'org-link-minor-mode-map)
#+end_src

** Provide
:PROPERTIES:
:ID:       317688ba-da16-4a42-9e4f-20b06a8d86cf
:END:

Finally, we add the =provide= feature clause so that we can later
=(require 'org-link-minor-mode)=.

#+name: provide
#+begin_src emacs-lisp
(provide 'org-link-minor-mode)
;;; org-link-minor-mode.el ends here
#+end_src

* Complete source

Here is the complete source:

#+name: source
#+begin_src emacs-lisp :tangle org-link-minor-mode.el :noweb yes :padline no
<<header>>

<<requires>>

<<declarations-for-byte-code>>

<<org-link-minor-mode--unfontify-region>>

<<keymap>>

<<define-minor-mode>>

<<provide>>
#+end_src
